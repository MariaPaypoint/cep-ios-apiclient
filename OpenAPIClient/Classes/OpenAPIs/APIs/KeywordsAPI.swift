//
// KeywordsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class KeywordsAPI {

    /**
     Read Keywords
     
     - parameter skip: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 100)
     - parameter alias: (query)  (optional)
     - parameter language: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func readKeywordsApiV1KeywordsGet(skip: Int? = nil, limit: Int? = nil, alias: String? = nil, language: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [Keyword]?, _ error: Error?) -> Void)) -> RequestTask {
        return readKeywordsApiV1KeywordsGetWithRequestBuilder(skip: skip, limit: limit, alias: alias, language: language).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Read Keywords
     - GET /api/v1/keywords/
     - Retrieve course.
     - parameter skip: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 100)
     - parameter alias: (query)  (optional)
     - parameter language: (query)  (optional)
     - returns: RequestBuilder<[Keyword]> 
     */
    open class func readKeywordsApiV1KeywordsGetWithRequestBuilder(skip: Int? = nil, limit: Int? = nil, alias: String? = nil, language: String? = nil) -> RequestBuilder<[Keyword]> {
        let localVariablePath = "/api/v1/keywords/"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "skip": (wrappedValue: skip?.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "alias": (wrappedValue: alias?.encodeToJSON(), isExplode: true),
            "language": (wrappedValue: language?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Keyword]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
